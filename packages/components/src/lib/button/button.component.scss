@use "elx/a11y" as *;
@use "elx/anim";
@use "elx/layout";
@use "elx/style/color";
@use "elx/style/type";

.elx-btn {
	@include layout.inline-flex(row, center);
	min-width: 0;
	cursor: pointer;
	appearance: none;
	background: transparent;
	border: none;
	border-radius: 0;
	@include anim.transition((background, color, box-shadow));
	outline: none !important;

	&--primary {
		background: color.primary(400);
		color: color.white();

		&:hover, &.hover   { background: color.primary(500); }
		&:active, &.active { background: color.primary(300); }
	}

	&--warning {
		background: color.warning(300);
		color: color.white();

		&:hover, &.hover   { background: color.warning(400); }
		&:active, &.active { background: color.warning(200); }

		.elx-icon {
			color: color.warning(800);
		}
	}

	&--secondary {
		background: color.accent(100);
		color: color.accent(700);

		&:hover, &.hover   { background: color.accent(200); }
		&:active, &.active { background: color.accent(50); }
	}

	&--primary, &--secondary {
		.elx-icon {
			color: color.accent(700);
		}
	}

	&--tertiary {
		background: color.background(700);
		color: color.foreground(200);

		.elx-icon {
			color: color.foreground(300);
		}

		&:hover, &.hover   { background: color.background(800); }
		&:active, &.active { background: color.background(600); }
	}

	&:focus-visible,
	&.focus {
		box-shadow: 0 0 0 4px color.accent(600);
		color: color.white();
	}

	&:disabled,
	&.disabled {
		background: color.background(500);
		color: color.foreground(500);
		cursor: default;

		.elx-icon {
			color: color.foreground(500);
		}
	}

	&--md {
		height: calc(#{rem(16)} + 16px);
		padding: 0 16px;
		@include type.ui;
		line-height: unset;

		.elx-icon {
			margin-right: 8px;
			margin-left: -4px;
		}
	}

	&--sm {
		height: calc(#{rem(12)} + 16px);
		padding: 0 12px;
		@include type.ui("sm");

		.elx-icon {
			margin-right: 6px;
			margin-left: -3px;
		}
	}

	&__label {
		flex: 1 0 0;
		@include type.truncate;
		// We want our text to be center-aligned vertically using a bounding box
		// measured from the baseline to the cap-height, but the top of its actual
		// bounding box is way too high, making the text look like it's sitting
		// too low. This is an eyeballed compensation because I'm not sure exactly
		// what metrics the renderer actually uses to measure for alignment.
		transform: translateY(-0.05em);
	}
}
