// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TsCompiler should work 1`] = `
"import { ClassDecoratorFactory, ClassDecoratorFn, first, methodDecoratorFactory, methodDecoratorFn, propDecoratorFactory, propDecoratorFn, second, third, } from \\"./lib/decorators/runtime\\";
// \`ClassDecoratorFn\` should add a \`test\` field to \`DecoratorFnTest\` initialized
// to a value of \`\\"Hello, world!\\"\`.
export class DecoratorFnTest {
    // \`propDecoratorFn\` should replace \`decoratedProp\` with \`get\`/\`set\`
    // accessors backed by a private field.
    #decoratedProp = \\"Hello, world!\\";
    get decoratedProp() { return this.#decoratedProp; }
    set decoratedProp(value) { this.#decoratedProp = value; }
    // \`methodDecoratorFn\` should add a console.log call to the body of the
    // decorated method.
    hello() { console.log(\\"Hello, world!\\"); }
    test = \\"Hello, world!\\";
}
// \`ClassDecoratorFactory\` should add each argument to \`DecoratorFactoryTest\` as
// a class field initialized to its passed value.
export class DecoratorFactoryTest {
    // \`propDecoratorFactory\` should replace \`decoratedProp\` with \`get\`/\`set\`
    // accessors backed by a private field.
    #decoratedProp = \\"Hello, world!\\";
    get decoratedProp() { return this.#decoratedProp; }
    set decoratedProp(value) { this.#decoratedProp = value; }
    // \`methodDecoratorFactory\` should add a console.log call to the body of the
    // decorated method.
    hello() { console.log(\\"Hello, world!\\"); }
    testString = \\"Hello, world!\\";
    testTemplate = \`Hello, world!\`;
    testNumber = 42;
    testBigint = 123456789123456789123456789123456789n;
    testRegex = /[_a-zA-Z][_a-zA-Z0-9]*/g;
    testBool = true;
    testNil = null;
}
export class DecoratorOrdering {
    // These decorators should be applied in the order implied by their names.
    // The end result should see \`decoratedProp\` renamed to
    // \`decoratedProp_first_second_third\`, followed by three new properties in
    // reverse order, \`#thirdAddtl\`, \`#secondAddtl\`, then \`#firstAddtl\`
    decoratedProp_first_second_third;
    #thirdAddtl = \\"third\\";
    #secondAddtl = \\"second\\";
    #firstAddtl = \\"first\\";
}
"
`;
